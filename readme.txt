新浪，网易...
解析每个网页html主域名和托管的域名，得到一组域名集合（dp, {d1,d2,d3...})
解析域名-> ip地址  {dpip1, dpip2, dpip3...} {{d1ip1,d2ip2...},{d2ip1,d2ip2}..}
得到的序列    domain <--多对多--> ip

识别方式：wireshark抓包，访问网站得到一组IP序列,逐个匹配主域名和ip映射，符合的加入列表，
在匹配次域名ip序列，计算每个权重，权重最大
解析出来的域名ip映射集合范围要更大


保证识别之后至少有k个相同的序列个数
域名和ip的映射关系是自己可以控制的
通过添加入ip或者删除ip来保证匹配的相同


进行匿名，修改边，添加边，加入节点
资源在托管的域名是如何分配，根据匿名后的图状态，进行资源的迁移
域名IP对于关系过期
维护IP和域名的映射表
1个域名对于n个IP地址
找出合格的主域名，d1、d2、d3
对次级域名，找出次级域名列表，至少有两个相同的
加边，修改边，删除边
[(0, 1), (0, 5), (0, 2), (1, 2), (2, 3), (3, 4), (4, 5)]
[(0, 4), (0, 1), (0, 5), (1, 3), (1, 2), (2, 3), (2, 5), (3, 4), (4, 5)]
0-4、 1-3、 2-5
将图按照度节点分组，按照最小代价分组得到当前节点的最佳度序列，之后动态调整图里的结构为之前的最佳度序列。
1.最小代价策略
2.调整代价策略

1.分组
每个顶点一个设置编号(0-n)，进行分组，领域相同的分在一组，然后调整节点的边
比如v0和v1、v2、v3连接， v0向量[1, 1, 1, 1, 0, 0]
比如v2和v3、v4、v5连接， v2向量[0, 1, 0, 1, 1, 1]
按照节点度分组，然后再按照领域属性分组，遍历每个分组，比较合并还是独立的代价
2.每个组调整边进行匿名保证大于k


1.资源分配下
根据匿名后的情况，一个域名10个资源，那么这10个资源重新平均分配到，如果匿名后的ip是>10个，如何分配？
2.域名和ip是多对多的情况，得到的映射表远远大于访问网站抓到的IP地址， 选ip权值和最大的



d1 : ip1, ip2, ip3,
d2 : ip1,ip2,ip3'
添加一个ip3'保证权值相同
ip1

ip2
ip3

比如: 1.ip1, ip2, ip3, ip4，ip5  熵值最大，命中了
     2.ip1, ip2, ip3, ip5， d->ip4,ip4/,
     ip1, ip2, ip3， ip2,ip2,ip3
可以改变的：ip，域名和ip映射关系，   不变的：网站的资源

10 10
10 11
k = 2
d1 ip1, ip2,ip3
d3 ip1, ip2,ip3


d2 ip1,ip2,ip4  (1,1,0,1)
d4 ip1,ip2,ip4


域名的托管关系(不变)
domain_subdomain_map = {
    "example.com": ["sub1.example.com", "sub2.example.com"],
    "test.com": ["sub3.test.com", "sub4.test.com"],
    "demo.com": ["sub5.demo.com", "sub6.demo.com"]
}

# 域名和IP的映射关系map（多对多）
domain_ip_map = {
    "example.com": ["192.168.1.1", "192.168.1.2"],
    "sub1.example.com": ["192.168.1.1"],
    "sub2.example.com": ["192.168.1.2"],
    "test.com": ["192.168.1.3", "192.168.1.4"],
    "sub3.test.com": ["192.168.1.3"],
    "sub4.test.com": ["192.168.1.4"],
    "demo.com": ["192.168.1.5", "192.168.1.6"],
    "sub5.demo.com": ["192.168.1.5"],
    "sub6.demo.com": ["192.168.1.6"]
}
域名权重(不变)
"domain_weights": {
    "example.com": 1,
    "test.com": 1,
    "demo.com": 1,
    "sub1.example.com": 0,
    "sub2.example.com": 0,
    "sub3.test.com": 0,
    "sub4.test.com": 0,
    "sub5.demo.com": 0,
    "sub6.demo.com": 0
}
ip权重(因为ip权重依托于托管的域名，如果增加域名和ip的映射关系，ip的权重需要重新计算)
"ip_weights": {
    "192.168.1.1": 0.5,
    "192.168.1.2": 0.5,
    "192.168.1.3": 0.5,
    "192.168.1.4": 0.5,
    "192.168.1.5": 0.5,
    "192.168.1.6": 0.5
}

一个域名：多个ip

想对主域名进行分类，有相同ip的主域名在同一个组，然后对子域名进行分类，有共同ip的子域名在同一个组
共同ip指的是一个域名包含的所有ip地址，如果不同就通过添加ip和域名的映射保证一样，优先选择一个域名对应ip少的进行调整



根据域名的域名提供商进行分类，域名服务提供商再进行动态调整



